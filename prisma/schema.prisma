generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String      @db.VarChar(100)
  clerkId          String      @unique
  email            String      @unique
  profileImage     String
  interviewResults Feedback[]
  stripeConnectId  String?     @db.VarChar(255)
  lastLoginAt      DateTime?
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  deletedAt        DateTime?
  subscription     Boolean     @default(false)
  stripeCustomerId String?     @db.VarChar(255)
  Interview        Interview[]

  @@index([email])
  @@index([clerkId])
}

model Interview {
  id               String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  role             String     @db.VarChar(255)
  level            String
  type             String
  techStack        String[]
  owner            User       @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId          String     @db.Uuid
  interviewResults Feedback[]
  cover            String
  questions        String[]
  createdAt        DateTime
}

model Feedback {
  id                  String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  User                User       @relation(fields: [userId], references: [id])
  userId              String     @db.Uuid
  Interview           Interview? @relation(fields: [interviewId], references: [id])
  interviewId         String?    @db.Uuid
  totalScore          Float
  categoryScores      Json[]
  strengths           String[]
  areasForImprovement String[]
  createdAt           DateTime
}
